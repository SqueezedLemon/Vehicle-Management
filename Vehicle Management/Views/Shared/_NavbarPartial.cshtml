@using Microsoft.AspNetCore.Identity
@using Vehicle_Management.Data;
@model Vehicle_Management.Models.BaseViewModel
@inject SignInManager<UserManager> SignInManager
@inject UserManager<UserManager> UserManager


@if (!User.IsInRole("Admin") && !User.IsInRole("Driver"))
{
    <a class="navbar-brand d-flex align-items-center justify-content-center text-danger" asp-area="" asp-controller="Home" asp-action="Index">
        <div class="navbar-brand-icon rotate-n-15">
            <i class="fas fa-car"></i>
        </div>
        <div class="navbar-brand-text mx-3">Vehicle Management</div>
    </a>
}
@if (User.IsInRole("Admin") || User.IsInRole("Driver"))
{
    <!-- Sidebar Toggle (Topbar) -->
    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
        <i class="fa fa-bars"></i>
    </button>
}

@if (SignInManager.IsSignedIn(User))
{
}

<!-- Topbar Navbar -->
<ul class="navbar-nav ml-auto">
    @if (SignInManager.IsSignedIn(User))
    {
    <!-- Nav Item - Alerts -->
     <li class="nav-item dropdown no-arrow mx-1">
        @{
            var user = await UserManager.GetUserAsync(User);
            @if (user != null)
            {
                <input type="hidden" id="userId" value=@user.Id>
            }
        }
        <input type="hidden" id="userId" value=@user.Id>
        @if (User.IsInRole("Admin"))
        {
            <input type="hidden" id="userRole" value="Admin">
        }
        @if (User.IsInRole("User"))
        {
            <input type="hidden" id="userRole" value="User">
        }
        @if (User.IsInRole("Driver"))
        {
            <input type="hidden" id="userRole" value="Driver">
        }
        <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button"
           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fas fa-bell" title="Notifications" style="color: #f95374;"></i>
            @if (Model != null && Model.Notifications != null)
            {
                <input type="hidden" id="notificationCount" value=@Model.Notifications.Count()>
            }
            <!-- Counter - Alerts -->
            <span id="alertCounter" class="badge badge-danger badge-counter"></span>
        </a>
        <!-- Dropdown - Alerts -->
        <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
             aria-labelledby="alertsDropdown">
            <h6 class="dropdown-header">
                Notifications
            </h6>
            <div id="alertsDropdownBody">
                @if (Model != null && Model.Notifications != null)
                {
                    @foreach (var notification in Model.Notifications)
                    {
                        @if(User.IsInRole("Admin"))
                        {
                            @if (notification.NotificationType == "NeedsApproval")
                            {
                                <a class="dropdown-item d-flex align-items-center" asp-controller="Home" asp-action="ApproveRequest" asp-route-id="@notification.RequestId">
                                    <div class="mr-3">
                                        <div class="icon-circle bg-primary">
                                            <i class="fas fa-file-alt text-white"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="small text-gray-500">@notification.Date</div>
                                        @{
                                            var notificationSender = await UserManager.FindByIdAsync(notification.CreatedById);
                                        }
                                        <span class="font-weight-bold">Request by @notificationSender.Name needs approval</span>
                                    </div>
                                </a>
                            }
                            @if (notification.NotificationType == "RequestCompleted")
                            {
                                <a class="dropdown-item d-flex align-items-center" asp-controller="Home" asp-action="ViewRequests">
                                    <div class="mr-3">
                                        <div class="icon-circle bg-primary">
                                            <i class="fas fa-file-alt text-white"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="small text-gray-500">@notification.Date</div>
                                        @{
                                            var notificationSender = await UserManager.FindByIdAsync(notification.CreatedById);
                                        }
                                        <span class="font-weight-bold">@notificationSender.Name has completed a request.</span>
                                    </div>
                                </a>
                            }
                        }

                        @if (User.IsInRole("User"))
                        {
                            @if (notification.NotificationType == "IsApproved")
                            {
                                <a class="dropdown-item d-flex align-items-center" asp-controller="User" asp-action="Home">
                                    <div class="mr-3">
                                        <div class="icon-circle bg-primary">
                                            <i class="fas fa-file-alt text-white"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="small text-gray-500">@notification.Date</div>
                                        @{
                                            var notificationSender = await UserManager.FindByIdAsync(notification.CreatedById);
                                        }
                                            <span class="font-weight-bold">@notificationSender.Name has approved your request.</span>
                                    </div>
                                </a>
                            }
                        }
                        @if (User.IsInRole("Driver"))
                        {
                            @if (notification.NotificationType == "IsPending")
                            {
                                <a class="dropdown-item d-flex align-items-center" asp-controller="Driver" asp-action="ViewTask">
                                    <div class="mr-3">
                                        <div class="icon-circle bg-primary">
                                            <i class="fas fa-file-alt text-white"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="small text-gray-500">@notification.Date</div>
                                        <span class="font-weight-bold">A new request is pending.</span>
                                    </div>
                                </a>
                            }
                        }
                    }
                }
            </div>
                <a class="dropdown-item text-center small text-gray-500" asp-controller="Home" asp-action="AllNotifications">Show All Notifications</a>
        </div>
    </li>
    }
    <div class="topbar-divider d-none d-sm-block"></div>
    @if (SignInManager.IsSignedIn(User))
    {
        <!-- Nav Item - User Information -->
        <li class="nav-item dropdown no-arrow">
            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="mr-2 d-none d-lg-inline text-gray-600 small">@User.Identity?.Name</span>
                <img class="img-profile rounded-circle"
                src="~/img/undraw_profile.svg">
            </a>
            <!-- Dropdown - User Information -->
            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
            aria-labelledby="userDropdown">
                @*<a class="dropdown-item" href="#">
                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                    Profile
                </a>
                <a class="dropdown-item" href="#">
                    <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                    Settings
                </a>
                <a class="dropdown-item" href="#">
                    <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                    Activity Log
                </a>
                <div class="dropdown-divider"></div>*@
                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                    Logout
                </a>
            </div>
        </li>
    }
    else
    {
        <a class="nav-link" role="button" asp-area="Identity" asp-page="/Account/Login">
            <span class="mr-2 d-inline text-red-900 medium">Login</span>
        </a>
    }
</ul>
<!-- Logout Modal-->
<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="btn btn-primary">Logout</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/Notification.js"></script>
<script> 
    document.addEventListener("DOMContentLoaded", function () {
        var userId = document.getElementById("userId").value;
        var userRole = document.getElementById("userRole").value;
        var notificationCounter = document.getElementById("alertCounter");
        var notificationCount = parseInt(document.getElementById("notificationCount").value);

        if (notificationCount !== 0) {
            notificationCounter.textContent = notificationCount.toString();
            notificationCounter.style.display = "inline-block";
        } else {
            notificationCounter.style.display = "none";
        }

        connection.on("ReceiveAdminNotification", function (senderName, requestId, notificationType) {
            notificationCount = notificationCount + 1;

            if (notificationCount !== 0) {
                notificationCounter.textContent = notificationCount.toString();
                notificationCounter.style.display = "inline-block";
            } else {
                notificationCounter.style.display = "none";
            }
        });

        connection.on("ReceiveNotification", function (senderName, requestId, notificationType) {
            notificationCount = notificationCount + 1;

            if (notificationCount !== 0) {
                notificationCounter.textContent = notificationCount.toString();
                notificationCounter.style.display = "inline-block";
            } else {
                notificationCounter.style.display = "none";
            }
        });


        $(document).ready(function () {
            // Attach event listener to alertsDropdown element
            $('#alertsDropdown').on('click', function () {
                if(userRole == "Admin")
                {
                    connection.invoke("ReadCompletedNotifications");
                }
                if(userRole == "User")
                {
                    connection.invoke("ReadApprovedNotifications", userId);
                }
                if (userRole == "Driver") 
                {
                    connection.invoke("ReadPendingNotifications", userId);
                }
                notificationCounter.textContent = "0";
                notificationCounter.style.display = "none";
            });
        });
    });
</script>

