@model Vehicle_Management.Models.BaseViewModel
@{
    ViewData["Title"] = "Register";
}

<!-- Custom styles for this page-->
<link href="~/css/sb-admin-2.min.css" rel="stylesheet">
<link href="~/css/style.css" rel="stylesheet">

@if (User.IsInRole("Admin"))
{
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-5">
                <div class="card o-hidden border-0 shadow-lg my-4">
                    <div class="card-body p-0">
                        <!-- Nested Row within Card Body -->
                        <div class="row">
                            <div class="col-lg">
                                <div class="p-5">
                                    <div class="text-center">
                                        <h1 class="h4 text-gray-900 mb-4">Create an Account!</h1>
                                    </div>
                                    <form id="registerForm" asp-controller="Home" asp-action="RegisterUser" method="post">
                                        <div class="form-group">
                                            <input type="text" asp-for="RegisterUser.Name" class="form-control form-control-user" placeholder="Full Name" required>
                                        </div>
                                        <div class="form-group">
                                            <select class="form-control select-custom" asp-for="RegisterUser.Role" required>
                                                <option value="User">Normal User</option>
                                                <option value="Admin">Admin User</option>
                                                <option value="Driver">Driver User</option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <input type="email" asp-for="RegisterUser.Email" class="form-control form-control-user" placeholder="Email Address" required>
                                        </div>
                                        <div class="form-group password-input-group">
                                            <input type="password" asp-for="RegisterUser.Password" class="form-control form-control-user" id="password" placeholder="Password" required>
                                            <button class="btn toggle-password" type="button" id="togglePassword">
                                                <i class="bi bi-eye" title="Show/Hide Password"></i>
                                            </button>
                                        </div>
                                        <div class="form-group password-input-group">
                                            <input type="password" asp-for="RegisterUser.ConfirmPassword" class="form-control form-control-user" id="repeat-password" placeholder="Repeat Password" required>
                                            <button class="btn toggle-password" type="button" id="toggleRepeatPassword">
                                                <i class="bi bi-eye" title="Show/Hide Password"></i>
                                            </button>
                                        </div>
                                        <button id="registerSubmit" type="submit" class="btn btn-primary btn-user btn-block">Register</button>
                                        <hr>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["message"] != null)
    {
        @if (TempData["message"].ToString() == "Failed To Create User")
        {
            <div class="toast-container position-fixed bottom-0 end-0 p-3">
                <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto text-danger">@TempData["message"]</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body text-black">
                        Please Try Again!
                    </div>
                </div>
            </div>
        }

        @if (TempData["message"].ToString() == "User with Email Exists")
        {
            <div class="toast-container position-fixed bottom-0 end-0 p-3">
                <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto text-danger">@TempData["message"]</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body text-black">
                        Use New Email!
                    </div>
                </div>
            </div>
        }
    }
}
else
{
    <h1 class="text-primary">Access Denied</h1>
}


<script>
    // Function to toggle password visibility

    //For Password
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');

    togglePassword.addEventListener('click', function () {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);

        togglePassword.querySelector('i').classList.toggle('bi-eye');
        togglePassword.querySelector('i').classList.toggle('bi-eye-slash');
    });

    //For Repeat Password
    const toggleRepeatPassword = document.getElementById('toggleRepeatPassword');
    const repeatPasswordInput = document.getElementById('repeat-password');

    toggleRepeatPassword.addEventListener('click', function () {
        const type = repeatPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        repeatPasswordInput.setAttribute('type', type);

        toggleRepeatPassword.querySelector('i').classList.toggle('bi-eye');
        toggleRepeatPassword.querySelector('i').classList.toggle('bi-eye-slash');
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Bootstrap core JavaScript-->
<script src="~/vendor/jquery/jquery.min.js"></script>


<!-- Core plugin JavaScript-->
<script src="~/vendor/jquery-easing/jquery.easing.min.js"></script>

<!-- Custom scripts for all pages-->
<script src="~/js/sb-admin-2.min.js"></script>