@model List<Vehicle_Management.Models.HomeModel>
@{
    ViewData["Title"] = "Vehicle Management";
}

@if (User.IsInRole("Admin"))
{
     <div>
		<h2>Vehicles</h2>
		<div class="row">
			<div class="col input-group">
				<span class="input-group-text"><i class="bi bi-search"></i></span>
				<input type="text" id="myInput" onkeyup="searchTable()" placeholder="Registration Number">
			</div>
			<div class="col text-end">
				<a href=""><i class="bi bi-plus-circle-fill" style="font-size: 25px; color: black;"></i></a>
			</div>
		</div>
		<div class="table-responsive">
			<table class="table table-md" id="myTable">
				<thead>
					<tr>
						<th class="text-center">Registration Number</th>
						<th class="text-center">Manufacture Company</th>
						<th class="text-center">Vehicle Model</th>
						<th class="text-center">Engine Capacity</th>
						<th class="text-center">Manufactured Year</th>
						<th class="text-center">Purchased On</th>
						<th class="text-center">Color</th>
						<th class="text-center">Engine Number</th>
						<th class="text-center">Chasis Number</th>
						<th class="text-center">Passenger Capacity</th>
						<th class="text-center">Fuel</th>
						<th class="text-center">Is Available</th>
					</tr>
				</thead>
				<tbody id="myTableBody">
					@foreach (var product in Model)
					{
						<tr>
							<td class="text-center">@product.RegistrationNumber</td>
							<td class="text-center">@product.ManufactureCompany</td>
							<td class="text-center">@product.VehicleModel</td>
							<td class="text-center">@product.EngineCapacity</td>
							<td class="text-center">@product.ManufacturedYear</td>
							<td class="text-center">@product.PurchasedOn.ToString("yyyy-MM-dd")</td>
							<td class="text-center">@product.Color</td>
							<td class="text-center">@product.EngineNumber</td>
							<td class="text-center">@product.ChasisNumber</td>
							<td class="text-center">@product.PassengerCapacity</td>
							<td class="text-center">@product.Fuel</td>
							<td class="text-center">@product.IsAvailable</td>
							<td class="text-center">
								<a href=""><i class="bi bi-pencil-square" style="font-size: 20px; color: black;"></i></a>
								<a href=""><i class="bi bi-trash3-fill" style="font-size: 20px; color: red;"></i></a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<script>
			// Function to search table rows
			function searchTable() {
				var input, filter, table, tr, td, i, txtValue;
				input = document.getElementById("myInput");
				filter = input.value.toUpperCase();
				table = document.getElementById("myTable");
				tr = table.getElementsByTagName("tr");
				for (i = 0; i < tr.length; i++) {
					td = tr[i].getElementsByTagName("td")[0];
					if (td) {
						txtValue = td.textContent || td.innerText;
						if (txtValue.toUpperCase().indexOf(filter) > -1) {
							tr[i].style.display = "";
						} else {
							tr[i].style.display = "none";
						}
					}
				}
			}

			// Function to dynamically add rows to the table
			function addRow(registrationNumber, manufactureCompany, vehicleModel, engineCapacity, manufacturedYear, purchasedOn, color, engineNumber, chasisNumber, passengerCapacity, fuel, isAvailable) {
				var tableBody = document.getElementById("myTableBody");
				var row = tableBody.insertRow(-1);
				var registrationNumberCell = row.insertCell(0);
				registrationNumberCell.classList.add("text-center");
				var manufactureCompanyCell = row.insertCell(1);
				manufactureCompanyCell.classList.add("text-center");
				var vehicleModelCell = row.insertCell(2);
				vehicleModelCell.classList.add("text-center");
				var engineCapacityCell = row.insertCell(3);
				engineCapacityCell.classList.add("text-center");
				var manufacturedYearCell = row.insertCell(4);
				manufacturedYearCell.classList.add("text-center");
				var purchasedOnCell = row.insertCell(5);
				purchasedOnCell.classList.add("text-center");
				var colorCell = row.insertCell(6);
				colorCell.classList.add("text-center");
				var engineNumberCell = row.insertCell(7);
				engineNumberCell.classList.add("text-center");
				var chasisNumberCell = row.insertCell(8);
				chasisNumberCell.classList.add("text-center");
				var passengerCapacityCell = row.insertCell(9);
				passengerCapacityCell.classList.add("text-center");
				var fuelCell = row.insertCell(10);
				fuelCell.classList.add("text-center");
				var isAvailableCell = row.insertCell(11);
				isAvailableCell.classList.add("text-center");
				registrationNumberCell.innerHTML = registrationNumber;
				manufactureCompanyCell.innerHTML = manufactureCompany;
				vehicleModelCell.innerHTML = vehicleModel;
				engineCapacityCell.innerHTML = engineCapacity;
				manufacturedYearCell.innerHTML = manufacturedYear;
				purchasedOnCell.innerHTML = purchasedOn;
				colorCell.innerHTML = color;
				engineNumberCell.innerHTML = engineNumber;
				chasisNumberCell.innerHTML = chasisNumber;
				passengerCapacityCell.innerHTML = passengerCapacity;
				fuelCell.innerHTML = fuel;
				isAvailableCell.innerHTML = isAvailable;
			}
		</script>
     </div>   
}
@if (!User.Identity.IsAuthenticated)
{
    <div>
        <h1 class="display-4">Welcome</h1>
        <h2>to Vehicle Management</h2>
    </div>
}

